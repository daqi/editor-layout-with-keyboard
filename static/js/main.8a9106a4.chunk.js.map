{"version":3,"sources":["hooks/useVisualViewport.ts","utils/index.ts","components/BlurPrevent.tsx","components/TouchMovePrevent.tsx","App.tsx","hooks/useClientType.ts","hooks/useSize.ts","index.tsx"],"names":["getValue","window","visualViewport","width","height","innerWidth","innerHeight","EventPrevent","e","preventDefault","stopPropagation","BlurPrevent","children","onClick","touchMovePrevent","props","ref","useRef","startRef","moveRef","useEffect","handler","dom","current","addEventListener","passive","removeEventListener","handleTouchEnd","onTouchStart","TouchMovePrevent","BScroll","use","ScrollBar","App","content","textAreaRef","scrollWapperRef","textAreaAutoHeight","style","scrollHeight","scrollRef","document","scrollingElement","scrollTo","top","scrollY","scrollbar","click","tagException","autoBlur","bounce","momentumLimitTime","handelChange","useState","keyboardShow","setKeyboardShow","clientType","useMemo","test","navigator","userAgent","iOS","Android","PC","windowHeightRef","viewport","setViewport","useVisualViewport","size","clientWidth","clientHeight","state","setState","useLayoutEffect","resizeObserver","ResizeObserver","entries","forEach","entry","target","observe","disconnect","useSize","refresh","toolbarBottom","heightStyle","className","undefined","defaultValue","onChange","onFocus","onBlur","bottom","selectionStart","selectionEnd","textBefore","value","slice","textAfter","setSelectionRange","ReactDOM","render","StrictMode","Array","fill","join","getElementById"],"mappings":"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","file":"static/js/main.8a9106a4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getValue() {\n  return window.visualViewport\n    ? {\n        width: window.visualViewport.width,\n        height: window.visualViewport.height,\n      }\n    : {\n        width: window.innerWidth,\n        height: window.innerHeight,\n      };\n}\n\nexport default function useVisualViewport() {\n  const [viewport, setViewport] = useState(getValue());\n\n  useEffect(() => {\n    const handler = () => {\n      if (!window.visualViewport) return;\n      setViewport(getValue());\n    };\n\n    window.visualViewport.addEventListener('resize', handler);\n    window.visualViewport.addEventListener('scroll', handler);\n\n    return () => {\n      window.visualViewport.removeEventListener('resize', handler);\n      window.visualViewport.removeEventListener('scroll', handler);\n    };\n  }, []);\n\n  return viewport;\n}\n","export const EventPrevent = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n","import React, { useRef, useEffect } from 'react';\nimport { EventPrevent } from 'src/utils';\n\ntype DivProps = React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\ntype BlurPreventProps = { onClick?: (e: TouchEvent) => void; touchMovePrevent?: boolean };\n\nconst BlurPrevent: React.FC<DivProps & BlurPreventProps> = ({\n  children,\n  onClick,\n  touchMovePrevent,\n  ...props\n}) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const startRef = useRef<boolean>(false);\n  const moveRef = useRef<boolean>(false);\n\n  const handleTouchStart = () => {\n    moveRef.current = false;\n    startRef.current = true;\n  };\n\n  useEffect(() => {\n    if (!touchMovePrevent) return;\n\n    const handler = (e: TouchEvent) => {\n      EventPrevent(e);\n    };\n    const dom = ref.current!;\n\n    dom.addEventListener('touchmove', handler, { passive: false });\n\n    return () => {\n      dom.removeEventListener('touchmove', handler);\n    };\n  }, [touchMovePrevent]);\n\n  useEffect(() => {\n    const handleTouchEnd = (e: TouchEvent) => {\n      if (!startRef.current) return;\n      startRef.current = false;\n\n      if (moveRef.current) return;\n\n      EventPrevent(e);\n      if (onClick) onClick(e);\n    };\n    const dom = ref.current!;\n\n    dom.addEventListener('touchend', handleTouchEnd, { passive: false });\n\n    return () => {\n      dom.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [onClick]);\n\n  return (\n    <div ref={ref} {...props} onTouchStart={handleTouchStart}>\n      {children}\n    </div>\n  );\n};\n\nexport default BlurPrevent;\n","import React, { useRef, useEffect } from 'react';\nimport { EventPrevent } from 'src/utils';\n\ntype DivProps = React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\nconst TouchMovePrevent: React.FC<DivProps> = ({ children, ...props }) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handler = (e: TouchEvent) => {\n      EventPrevent(e);\n    };\n    const dom = ref.current!;\n\n    dom.addEventListener('touchmove', handler, { passive: false });\n\n    return () => {\n      dom.removeEventListener('touchmove', handler);\n    };\n  }, []);\n\n  return (\n    <div ref={ref} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default TouchMovePrevent;\n","import React, { useState, useMemo, useEffect, useRef } from 'react';\nimport BScroll from '@better-scroll/core';\nimport ScrollBar from '@better-scroll/scroll-bar';\n\nimport useVisualViewport from 'src/hooks/useVisualViewport';\nimport useClientType from 'src/hooks/useClientType';\nimport useSize from 'src/hooks/useSize';\nimport BlurPrevent from 'src/components/BlurPrevent';\nimport TouchMovePrevent from 'src/components/TouchMovePrevent';\n\nimport './App.less';\n\nBScroll.use(ScrollBar);\n\nconst App: React.FC<{ content: string }> = ({ content }) => {\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n  const scrollWapperRef = useRef<HTMLDivElement>(null);\n\n  const textAreaAutoHeight = () => {\n    const dom = textAreaRef.current!;\n    dom.style.height = ''; // 字数减少时能自动减小高度\n    dom.style.height = `${dom.scrollHeight}px`;\n  };\n\n  const scrollRef = useRef<BScroll>();\n\n  useEffect(() => {\n    document.addEventListener('scroll', () => {\n      if (!document.scrollingElement) return;\n      document.scrollingElement.scrollTo({ top: 0 });\n    });\n  }, []);\n\n  useEffect(() => {\n    textAreaAutoHeight();\n    scrollRef.current = new BScroll(scrollWapperRef.current!, {\n      scrollY: true,\n      scrollbar: true,\n      click: true,\n      tagException: {},\n      autoBlur: false,\n      bounce: false,\n      momentumLimitTime: 200,\n    });\n  }, []);\n\n  const handelChange = () => {\n    textAreaAutoHeight();\n  };\n\n  const [keyboardShow, setKeyboardShow] = useState(false);\n\n  const clientType = useClientType();\n\n  const handleFocus = () => {\n    setKeyboardShow(true);\n  };\n\n  const handleBlur = () => {\n    setKeyboardShow(false);\n  };\n\n  const handelInsertEnter = () => {\n    const dom = textAreaRef.current!;\n    const { selectionStart, selectionEnd } = dom;\n    const textBefore = dom.value.slice(0, selectionStart);\n    const textAfter = dom.value.slice(selectionEnd);\n    dom.value = textBefore + '\\n' + textAfter;\n    dom.setSelectionRange(selectionStart + 1, selectionStart + 1);\n    handelChange();\n  };\n\n  const windowHeightRef = useRef(window.innerHeight);\n  const viewport = useVisualViewport();\n  const size = useSize(textAreaRef.current);\n\n  useEffect(() => {\n    scrollRef.current!.refresh();\n  }, [viewport, size]);\n\n  const toolbarBottom = useMemo(() => {\n    if (!keyboardShow) return 0;\n    if (clientType.iOS) {\n      return windowHeightRef.current - viewport.height;\n    }\n    return 0;\n  }, [clientType, keyboardShow, viewport.height]);\n\n  const heightStyle = {\n    height: viewport.height - 49,\n  };\n\n  return (\n    <div className=\"app\" style={keyboardShow ? heightStyle : undefined}>\n      <TouchMovePrevent className=\"app-header\">键盘上方工具条演示</TouchMovePrevent>\n      <main className=\"app-container-wrap\" ref={scrollWapperRef}>\n        <div className=\"app-container\">\n          <textarea\n            className=\"editor\"\n            ref={textAreaRef}\n            defaultValue={content}\n            onChange={handelChange}\n            onFocus={handleFocus}\n            onBlur={handleBlur}\n          />\n        </div>\n      </main>\n      {keyboardShow ? (\n        <BlurPrevent touchMovePrevent style={{ bottom: toolbarBottom }} className=\"editor-toolbar\">\n          <span>编辑器上方 Toolbar</span>\n          <BlurPrevent onClick={handelInsertEnter} className=\"editor-toolbar-button\">\n            回车\n          </BlurPrevent>\n        </BlurPrevent>\n      ) : null}\n      {!keyboardShow ? (\n        <TouchMovePrevent className=\"app-footer\">底部工具条</TouchMovePrevent>\n      ) : null}\n    </div>\n  );\n};\n\nexport default App;\n","import { useMemo } from 'react';\n\nexport default function useClientType() {\n  const clientType = useMemo(() => {\n    if (/(iPhone|iPad|iPod|iOS)/i.test(navigator.userAgent)) {\n      return { iOS: true };\n    }\n    if (/(Android)/i.test(navigator.userAgent)) {\n      return { Android: true };\n    }\n    return { PC: true };\n  }, []);\n  return clientType;\n}\n","import { useLayoutEffect, useState } from 'react';\n\ntype Size = { width?: number; height?: number };\n\nexport default function useSize(dom?: null | Element) {\n  const [state, setState] = useState<Size>(() => {\n    return {\n      width: ((dom || {}) as HTMLElement).clientWidth,\n      height: ((dom || {}) as HTMLElement).clientHeight,\n    };\n  });\n\n  useLayoutEffect(() => {\n    if (!dom) return;\n\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        setState({\n          width: entry.target.clientWidth,\n          height: entry.target.clientHeight,\n        });\n      });\n    });\n\n    resizeObserver.observe(dom);\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [dom]);\n\n  return state;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\n\nconst text = `React\n用于构建用户界面的 JavaScript 库\n\n声明式\nReact 使创建交互式 UI 变得轻而易举。为你应用的每一个状态设计简洁的视图，当数据改变时 React 能有效地更新并正确地渲染组件。\n\n以声明式编写 UI，可以让你的代码更加可靠，且方便调试。\n\n组件化\n创建拥有各自状态的组件，再由这些组件构成更加复杂的 UI。\n\n组件逻辑使用 JavaScript 编写而非模板，因此你可以轻松地在应用中传递数据，并使得状态与 DOM 分离。\n\n一次学习，随处编写\n无论你现在正在使用什么技术栈，你都可以随时引入 React 来开发新特性，而不需要重写现有代码。\n\nReact 还可以使用 Node 进行服务器渲染，或使用 React Native 开发原生移动应用。\n\n简单组件\nReact 组件使用一个名为 render() 的方法，接收输入的数据并返回需要展示的内容。在示例中这种类似 XML 的写法被称为 JSX。被传入的数据可在组件中通过 this.props 在 render() 访问。\n\n使用 React 的时候也可以不使用 JSX 语法。尝试使用 Babel REPL，了解 JSX 被编译成原生 JavaScript 代码的步骤。\n\n有状态组件\n除了使用外部数据（通过 this.props 访问）以外，组件还可以维护其内部的状态数据（通过 this.state 访问）。当组件的状态数据改变时，组件会再次调用 render() 方法重新渲染对应的标记。\n\n应用\n使用 props 和 state，我们可以创建一个简易的 Todo 应用。在示例中，我们使用 state 来保存现有的待办事项列表及用户的输入。尽管事件处理器看似被内联地渲染，但它们其实只会被事件委托进行收集和调用。\n\n在组件中使用外部插件\nReact 允许你结合其他框架或库一起使用。示例中使用了一个名为 remarkable 的外部 Markdown 库。它可以实时转换 <textarea> 里的内容。`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App content={new Array(5).fill(text).join('\\n')} />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}